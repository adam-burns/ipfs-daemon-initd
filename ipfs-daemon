#!/bin/sh
### BEGIN INIT INFO
# Provides:          $ipfs-daemon 
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Should-Start:      $iptables $ip6tables
# Should-Stop:       $iptables $ip6tables
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop IPFS Daemon
# Description:       Starts or stops the IPFS Daemon with watchdogging
### END INIT INFO

dir="/ipfs"
cmd="/usr/local/bin/ipfs daemon"
user="ipfs"

name=`basename $0`
pid_file="/var/run/$name.pid"
tmp_file="/tmp/$name.log"
log_file="/var/log/$name.log"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

command -v logger >/dev/null 2>&1
if [ $? -eq 0 ]; then
   use_logger=1
fi


case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ -z "$user" ]; then
	    if [ $use_logger -eq 1 ]; then
               sudo $cmd 2>&1 | logger -t 'ipfs-daemon' &
	    else
	       sudo $cmd >>"$log_file" 2>&1 &	       
	    fi
        else
	    if [ $use_logger -eq 1 ]; then
               #sudo -u "$user" $cmd 2>&1 | logger -t 'ipfs-daemon' &
	       sudo -u "$user" /bin/sh -c 'echo $$>'"$tmp_file"' && exec '"$cmd"' 2>&1 >>'"$log_file" &
		sleep 5
		#'"$cmd"' 2>&1 | logger -t "ipfs-daemon"&'
	    else
	       sudo -u "$user" $cmd >>"$log_file" 2>&1 &
	    fi 
        fi
        #echo $! > "$pid_file"
	mv $tmp_file $pid_file
        if ! is_running; then
            echo "Unable to start $name"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill -9 `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
